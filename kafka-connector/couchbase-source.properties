# Arbitrary unique name for the connector. Attempting to register
# two connectors with the same name will fail.
name=test-couchbase-source

# The Java class for the connector.
connector.class=com.couchbase.connect.kafka.CouchbaseSourceConnector

# The maximum number of tasks that should be created for this connector.
tasks.max=2

# Publish to this Kafka topic.
topic.name=couchbase-test-topic

# Connect to this Couchbase cluster (comma-separated list of bootstrap nodes).
connection.cluster_address=127.0.0.1
connection.timeout.ms=2000

# Optionally connect to Couchbase Server over a secure channel.
#   connection.ssl.enabled=true
#   connection.ssl.keystore.location=/tmp/keystore
#   connection.ssl.keystore.password=secret

# Read from this Couchbase bucket using these credentials.
connection.bucket=live-updates
connection.username=`username`
connection.password=`password`

# Optionally wait until an entire snapshot is received from Couchbase
# before publishing to Kafka (committing the offsets).
#
# Setting this to true tells the connector task to accumulate events
# in local memory until the whole snapshot is received.
#
# Setting this to false tells the connector task to send each event
# to the Kafka topic immediately.
use_snapshots=false

# Transform a Couchbase document change notification into a Kafka message
# using this Java class, which should extend com.couchbase.connect.kafka.handler.source.SourceHandler.
# Legacy handlers implementing com.couchbase.connect.kafka.converter.Converter will also work.
dcp.message.converter.class=com.couchbase.connect.kafka.handler.source.DefaultSchemaSourceHandler

# Control which Couchbase document change notifications get published to Kafka
# using this Java class, which must implement com.couchbase.connect.kafka.filter.Filter.
event.filter.class=com.couchbase.connect.kafka.filter.AllPassFilter
